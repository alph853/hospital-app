import { Doctor, Examination, Treatment, Patient, Receipt } from '@/entities';

export const Doctors: Doctor[] = [
    {
      ecode: 1,
      lname: 'Smith',
      fname: 'John',
      dob: new Date('1980-01-01'),
      address: '123 Main St, Springfield',
      gender: 'Male',
      start_date: new Date('2010-06-15'),
      degree_name: 'MD',
      degree_year: 2005,
      dcode: 101,
      dtitle: 'Cardiology'
    },
    {
      ecode: 2,
      lname: 'Doe',
      fname: 'Jane',
      dob: new Date('1985-02-02'),
      address: '456 Elm St, Springfield',
      gender: 'Female',
      start_date: new Date('2012-07-20'),
      degree_name: 'MD',
      degree_year: 2008,
      dcode: 102,
      dtitle: 'Neurology'
    },
    {
      ecode: 3,
      lname: 'Brown',
      fname: 'James',
      dob: new Date('1975-03-03'),
      address: '789 Oak St, Springfield',
      gender: 'Male',
      start_date: new Date('2008-08-25'),
      degree_name: 'MD',
      degree_year: 2000,
      dcode: 103,
      dtitle: 'Orthopedics'
    },
    {
      ecode: 4,
      lname: 'Johnson',
      fname: 'Emily',
      dob: new Date('1990-04-04'),
      address: '101 Pine St, Springfield',
      gender: 'Female',
      start_date: new Date('2015-09-30'),
      degree_name: 'MD',
      degree_year: 2012,
      dcode: 104,
      dtitle: 'Pediatrics'
    },
    {
      ecode: 5,
      lname: 'Williams',
      fname: 'Michael',
      dob: new Date('1982-05-05'),
      address: '202 Maple St, Springfield',
      gender: 'Male',
      start_date: new Date('2011-10-10'),
      degree_name: 'MD',
      degree_year: 2006,
      dcode: 105,
      dtitle: 'Dermatology'
    },
    {
      ecode: 6,
      lname: 'Jones',
      fname: 'Sarah',
      dob: new Date('1988-06-06'),
      address: '303 Cedar St, Springfield',
      gender: 'Female',
      start_date: new Date('2013-11-15'),
      degree_name: 'MD',
      degree_year: 2010,
      dcode: 106,
      dtitle: 'Oncology'
    },
    {
      ecode: 7,
      lname: 'Garcia',
      fname: 'David',
      dob: new Date('1978-07-07'),
      address: '404 Birch St, Springfield',
      gender: 'Male',
      start_date: new Date('2009-12-20'),
      degree_name: 'MD',
      degree_year: 2003,
      dcode: 107,
      dtitle: 'Gastroenterology'
    },
    {
      ecode: 8,
      lname: 'Martinez',
      fname: 'Laura',
      dob: new Date('1983-08-08'),
      address: '505 Walnut St, Springfield',
      gender: 'Female',
      start_date: new Date('2014-01-25'),
      degree_name: 'MD',
      degree_year: 2009,
      dcode: 108,
      dtitle: 'Endocrinology'
    },
    {
      ecode: 9,
      lname: 'Rodriguez',
      fname: 'Robert',
      dob: new Date('1976-09-09'),
      address: '606 Chestnut St, Springfield',
      gender: 'Male',
      start_date: new Date('2007-02-15'),
      degree_name: 'MD',
      degree_year: 2001,
      dcode: 109,
      dtitle: 'Rheumatology'
    },
    {
      ecode: 10,
      lname: 'Lee',
      fname: 'Anna',
      dob: new Date('1987-10-10'),
      address: '707 Spruce St, Springfield',
      gender: 'Female',
      start_date: new Date('2016-03-10'),
      degree_name: 'MD',
      degree_year: 2011,
      dcode: 110,
      dtitle: 'Ophthalmology'
    }
  ];

  export const Treatments: Treatment[] = [
    {
      sid: 1,
      start_date: new Date('2023-01-01'),
      end_date: new Date('2023-01-10'),
      result: 'Recovered',
      t_fee: 500,
      recover_f: true,
      med_f: false,
      did: [1, 2, 3, 4].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 1,
    },
    {
      sid: 2,
      start_date: new Date('2023-02-01'),
      end_date: new Date('2023-02-15'),
      result: 'Ongoing',
      t_fee: 700,
      recover_f: false,
      med_f: true,
      did: [3].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 2,
    },
    {
      sid: 3,
      start_date: new Date('2023-03-01'),
      end_date: new Date('2023-03-10'),
      result: 'Recovered',
      t_fee: 600,
      recover_f: true,
      med_f: false,
      did: [1].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 3,
    },
    {
      sid: 4,
      start_date: new Date('2023-04-01'),
      end_date: new Date('2023-04-20'),
      result: 'Ongoing',
      t_fee: 800,
      recover_f: false,
      med_f: true,
      did: [2, 3].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 4,
    },
    {
      sid: 5,
      start_date: new Date('2023-05-01'),
      end_date: new Date('2023-05-10'),
      result: 'Recovered',
      t_fee: 550,
      recover_f: true,
      med_f: false,
      did: [1, 2].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 5,
    },
    {
      sid: 6,
      start_date: new Date('2023-06-01'),
      end_date: new Date('2023-06-15'),
      result: 'Ongoing',
      t_fee: 750,
      recover_f: false,
      med_f: true,
      did: [3].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 6,
    },
    {
      sid: 7,
      start_date: new Date('2023-07-01'),
      end_date: new Date('2023-07-10'),
      result: 'Recovered',
      t_fee: 650,
      recover_f: true,
      med_f: false,
      did: [1].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 7,
    },
    {
      sid: 8,
      start_date: new Date('2023-08-01'),
      end_date: new Date('2023-08-20'),
      result: 'Ongoing',
      t_fee: 850,
      recover_f: false,
      med_f: true,
      did: [2, 3].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 8,
    },
    {
      sid: 9,
      start_date: new Date('2023-09-01'),
      end_date: new Date('2023-09-10'),
      result: 'Recovered',
      t_fee: 600,
      recover_f: true,
      med_f: false,
      did: [1, 2].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 9,
    },
    {
      sid: 10,
      start_date: new Date('2023-10-01'),
      end_date: new Date('2023-10-15'),
      result: 'Ongoing',
      t_fee: 700,
      recover_f: false,
      med_f: true,
      did: [3].map((dcode) => ({ecode: dcode, name: `${Doctors[dcode - 1].fname} ${Doctors[dcode - 1].lname}`})),
      pid: 10,
    },
  ];

  export const examinations: Examination[] = [
    {
      sid: 11,
      fee: 100,
      e_date: new Date('2023-01-05'),
      diagnosis: 'Flu',
      next_exam_date: new Date('2023-01-12'),
      pid: 1,
      did: {ecode: Doctors[0].ecode, name:`${Doctors[0].fname} ${Doctors[0].lname}`},
      med_f: true,
    },
    {
      sid: 12,
      fee: 150,
      e_date: new Date('2023-02-10'),
      diagnosis: 'Cold',
      next_exam_date: null,
      pid: 2,
      did: {ecode: Doctors[1].ecode, name:`${Doctors[1].fname} ${Doctors[1].lname}`},
      med_f: false,
    },
    {
      sid: 13,
      fee: 120,
      e_date: new Date('2023-03-15'),
      diagnosis: 'Allergy',
      next_exam_date: new Date('2023-03-22'),
      pid: 3,
      did: {ecode: Doctors[0].ecode, name:`${Doctors[0].fname} ${Doctors[0].lname}`},
      med_f: true,
    },
    {
      sid: 14,
      fee: 130,
      e_date: new Date('2023-04-20'),
      diagnosis: 'Infection',
      next_exam_date: new Date('2023-04-27'),
      pid: 4,
      did: {ecode: Doctors[1].ecode, name:`${Doctors[1].fname} ${Doctors[1].lname}`},
      med_f: false,
    },
    {
      sid: 15,
      fee: 110,
      e_date: new Date('2023-05-25'),
      diagnosis: 'Flu',
      next_exam_date: new Date('2023-06-01'),
      pid: 5,
      did: {ecode: Doctors[0].ecode, name:`${Doctors[0].fname} ${Doctors[0].lname}`},
      med_f: true,
    },
    {
      sid: 16,
      fee: 140,
      e_date: new Date('2023-06-30'),
      diagnosis: 'Cold',
      next_exam_date: null,
      pid: 6,
      did: {ecode: Doctors[1].ecode, name:`${Doctors[1].fname} ${Doctors[1].lname}`},
      med_f: false,
    },
    {
      sid: 17,
      fee: 115,
      e_date: new Date('2023-07-05'),
      diagnosis: 'Allergy',
      next_exam_date: new Date('2023-07-12'),
      pid: 7,
      did: {ecode: Doctors[0].ecode, name:`${Doctors[0].fname} ${Doctors[0].lname}`},
      med_f: true,
    },
    {
      sid: 18,
      fee: 125,
      e_date: new Date('2023-08-10'),
      diagnosis: 'Infection',
      next_exam_date: new Date('2023-08-17'),
      pid: 8,
      did: {ecode: Doctors[1].ecode, name:`${Doctors[1].fname} ${Doctors[1].lname}`},
      med_f: false,
    },
    {
      sid: 19,
      fee: 105,
      e_date: new Date('2023-09-15'),
      diagnosis: 'Flu',
      next_exam_date: new Date('2023-09-22'),
      pid: 9,
      did: {ecode: Doctors[0].ecode, name:`${Doctors[0].fname} ${Doctors[0].lname}`},
      med_f: true,
    },
    {
      sid: 20,
      fee: 135,
      e_date: new Date('2023-10-20'),
      diagnosis: 'Cold',
      next_exam_date: null,
      pid: 10,
      did: {ecode: Doctors[1].ecode, name:`${Doctors[1].fname} ${Doctors[1].lname}`},
      med_f: false,
    },
  ];

  export const patients: Patient[] = [
  {
    pid: 1,
    lname: 'Smith',
    fname: 'John',
    dob: new Date('1980-01-01'),
    address: '123 Main St, Springfield',
    phone: '123-456-7890',
    gender: 'Male',
    examinations: [examinations[0]],
    treatments: [Treatments[0]],
  },
  {
    pid: 2,
    lname: 'Doe',
    fname: 'Jane',
    dob: new Date('1985-02-02'),
    address: '456 Elm St, Springfield',
    phone: '987-654-3210',
    gender: 'Female',
    examinations: [examinations[1]],
    treatments: [Treatments[1]],
  },
  {
    pid: 3,
    lname: 'Brown',
    fname: 'James',
    dob: new Date('1975-03-03'),
    address: '789 Oak St, Springfield',
    phone: '555-123-4567',
    gender: 'Male',
    examinations: [examinations[2]],
    treatments: [Treatments[2]],
  },
  {
    pid: 4,
    lname: 'Johnson',
    fname: 'Emily',
    dob: new Date('1990-04-04'),
    address: '101 Pine St, Springfield',
    phone: '555-987-6543',
    gender: 'Female',
    examinations: [examinations[3]],
    treatments: [Treatments[3]],
  },
  {
    pid: 5,
    lname: 'Williams',
    fname: 'Michael',
    dob: new Date('1982-05-05'),
    address: '202 Maple St, Springfield',
    phone: '555-654-3210',
    gender: 'Male',
    examinations: [examinations[4]],
    treatments: [Treatments[4]],
  },
  {
    pid: 6,
    lname: 'Jones',
    fname: 'Sarah',
    dob: new Date('1988-06-06'),
    address: '303 Cedar St, Springfield',
    phone: '555-321-0987',
    gender: 'Female',
    examinations: [examinations[5]],
    treatments: [Treatments[5]],
  },
  {
    pid: 7,
    lname: 'Garcia',
    fname: 'David',
    dob: new Date('1978-07-07'),
    address: '404 Birch St, Springfield',
    phone: '555-876-5432',
    gender: 'Male',
    examinations: [examinations[6]],
    treatments: [Treatments[6]],
  },
  {
    pid: 8,
    lname: 'Martinez',
    fname: 'Laura',
    dob: new Date('1983-08-08'),
    address: '505 Walnut St, Springfield',
    phone: '555-432-1098',
    gender: 'Female',
    examinations: [examinations[7]],
    treatments: [Treatments[7]],
  },
  {
    pid: 9,
    lname: 'Rodriguez',
    fname: 'Robert',
    dob: new Date('1976-09-09'),
    address: '606 Chestnut St, Springfield',
    phone: '555-098-7654',
    gender: 'Male',
    examinations: [examinations[8]],
    treatments: [Treatments[8]],
  },
  {
    pid: 10,
    lname: 'Lee',
    fname: 'Anna',
    dob: new Date('1987-10-10'),
    address: '707 Spruce St, Springfield',
    phone: '555-765-4321',
    gender: 'Female',
    examinations: [examinations[9]],
    treatments: [Treatments[9]],
  },
];

const medications = [
  { mid: 1, name: 'Medication A', quantity: 10, price: 5 },
  { mid: 2, name: 'Medication B', quantity: 5, price: 10 },
  { mid: 3, name: 'Medication C', quantity: 20, price: 2 },
  { mid: 4, name: 'Medication D', quantity: 15, price: 8 },
  { mid: 5, name: 'Medication E', quantity: 8, price: 12 },
];

export const Receipts: Receipt[] = Array.from({ length: 20 }, (_, index) => {
  const sid = index + 1;
  const medication = medications.map(med => ({
    ...med,
    quantity: Math.floor(Math.random() * 10) + 1,
  }));
  const total = medication.reduce((sum, med) => sum + med.quantity * med.price, 0);
  return { sid, medication, total };
});